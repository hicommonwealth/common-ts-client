/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as CommonApi from "../../../index";

/**
 * On-Chain Contest Manager
 */
export interface GetGlobalActivityResponseResultsItemTopicActiveContestManagersItem {
    /** On-Chain contest manager address */
    contest_address: string;
    /** Creator of the contest manager */
    creator_address?: string;
    community_id: string;
    name: string;
    description?: string;
    image_url?: string;
    /** Provided by admin on creation when stake funds are not used */
    funding_token_address?: string;
    /** Percentage of pool used for prizes in recurring contests */
    prize_percentage?: number;
    /** Sorted array of percentages for prize, from first to last */
    payout_structure: number[];
    /** Recurring contest interval, 0 when one-off */
    interval: number;
    ticker?: string;
    decimals?: number;
    created_at: string;
    /** Flags when contest policy is cancelled by admin */
    cancelled?: boolean;
    /** Flags when contest is ending */
    ending?: boolean;
    /** Flags when the one-off contest has ended and rollover was completed */
    ended?: boolean;
    contests?: unknown;
    farcaster_frame_url?: string;
    farcaster_frame_hashes?: string[];
    topic_id?: number;
    topics?: unknown;
    is_farcaster_contest: boolean;
    /** Vote weight multiplier */
    vote_weight_multiplier?: number;
    /** For bot-created contests, the hash of the farcaster author's cast that created the contest */
    farcaster_author_cast_hash?: string;
    namespace_judge_token_id?: number;
    namespace_judges?: string[];
    /** The environment that created the contest manager */
    environment?: CommonApi.GetGlobalActivityResponseResultsItemTopicActiveContestManagersItemEnvironment;
    deleted_at?: string;
    content: CommonApi.GetGlobalActivityResponseResultsItemTopicActiveContestManagersItemContentItem[];
}
