/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as CommonApi from "../../../index";

export interface GetThreadsResponseResultsItem {
    id: number;
    address_id: number;
    title: string;
    kind: string;
    stage?: string;
    body: string;
    url?: string;
    topic_id?: number;
    pinned?: boolean;
    community_id: string;
    view_count?: number;
    links?: CommonApi.GetThreadsResponseResultsItemLinksItem[];
    content_url?: string;
    read_only?: boolean;
    has_poll?: boolean;
    canvas_signed_data?: string;
    canvas_msg_id?: string;
    created_at?: CommonApi.GetThreadsResponseResultsItemCreatedAt;
    updated_at?: CommonApi.GetThreadsResponseResultsItemUpdatedAt;
    last_edited?: CommonApi.GetThreadsResponseResultsItemLastEdited;
    deleted_at?: CommonApi.GetThreadsResponseResultsItemDeletedAt;
    last_commented_on?: CommonApi.GetThreadsResponseResultsItemLastCommentedOn;
    marked_as_spam_at?: CommonApi.GetThreadsResponseResultsItemMarkedAsSpamAt;
    archived_at?: CommonApi.GetThreadsResponseResultsItemArchivedAt;
    locked_at?: CommonApi.GetThreadsResponseResultsItemLockedAt;
    discord_meta?: CommonApi.GetThreadsResponseResultsItemDiscordMeta;
    user_tier_at_creation?: number;
    reaction_count?: number;
    reaction_weights_sum?: string;
    comment_count?: number;
    activity_rank_date?: CommonApi.GetThreadsResponseResultsItemActivityRankDate;
    created_by?: string;
    profile_name?: string;
    search?: CommonApi.GetThreadsResponseResultsItemSearch;
    is_linking_token?: boolean;
    launchpad_token_address?: string;
    Address?: CommonApi.GetThreadsResponseResultsItemAddress;
    Reaction?: CommonApi.GetThreadsResponseResultsItemReaction;
    topic?: CommonApi.GetThreadsResponseResultsItemTopic;
    collaborators?: CommonApi.GetThreadsResponseResultsItemCollaboratorsItem[];
    reactions?: CommonApi.GetThreadsResponseResultsItemReactionsItem[];
    ThreadVersionHistories?: CommonApi.GetThreadsResponseResultsItemThreadVersionHistoriesItem[];
    associatedContests?: CommonApi.GetThreadsResponseResultsItemAssociatedContestsItem[];
    ContestActions?: CommonApi.GetThreadsResponseResultsItemContestActionsItem[];
    Comments?: CommonApi.GetThreadsResponseResultsItemCommentsItem[];
    /** total number of thread results for the query */
    total_num_thread_results?: number;
    user_id?: number;
    user_tier?: number;
    avatar_url?: string;
    address_last_active?: CommonApi.GetThreadsResponseResultsItemAddressLastActive;
}
