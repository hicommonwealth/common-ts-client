/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as CommonApi from "../../../../api/index";
import * as core from "../../../../core";
import { GetThreadsResponseThreadsItemReactionCreatedAt } from "./GetThreadsResponseThreadsItemReactionCreatedAt";
import { GetThreadsResponseThreadsItemReactionUpdatedAt } from "./GetThreadsResponseThreadsItemReactionUpdatedAt";
import { GetThreadsResponseThreadsItemReactionAddress } from "./GetThreadsResponseThreadsItemReactionAddress";
import { GetThreadsResponseThreadsItemReactionLastActive } from "./GetThreadsResponseThreadsItemReactionLastActive";

export const GetThreadsResponseThreadsItemReaction: core.serialization.ObjectSchema<
    serializers.GetThreadsResponseThreadsItemReaction.Raw,
    CommonApi.GetThreadsResponseThreadsItemReaction
> = core.serialization.object({
    id: core.serialization.number(),
    addressId: core.serialization.property("address_id", core.serialization.number()),
    reaction: core.serialization.stringLiteral("like"),
    threadId: core.serialization.property("thread_id", core.serialization.number().optional()),
    commentId: core.serialization.property("comment_id", core.serialization.number().optional()),
    proposalId: core.serialization.property("proposal_id", core.serialization.number().optional()),
    calculatedVotingWeight: core.serialization.property(
        "calculated_voting_weight",
        core.serialization.string().optional()
    ),
    canvasSignedData: core.serialization.property("canvas_signed_data", core.serialization.unknown().optional()),
    canvasMsgId: core.serialization.property("canvas_msg_id", core.serialization.string().optional()),
    createdAt: core.serialization.property("created_at", GetThreadsResponseThreadsItemReactionCreatedAt.optional()),
    updatedAt: core.serialization.property("updated_at", GetThreadsResponseThreadsItemReactionUpdatedAt.optional()),
    address: core.serialization.property("Address", GetThreadsResponseThreadsItemReactionAddress.optional()),
    address: core.serialization.string().optional(),
    lastActive: core.serialization.property("last_active", GetThreadsResponseThreadsItemReactionLastActive.optional()),
    profileName: core.serialization.property("profile_name", core.serialization.string().optional()),
    avatarUrl: core.serialization.property("avatar_url", core.serialization.string().optional()),
});

export declare namespace GetThreadsResponseThreadsItemReaction {
    interface Raw {
        id: number;
        address_id: number;
        reaction: "like";
        thread_id?: number | null;
        comment_id?: number | null;
        proposal_id?: number | null;
        calculated_voting_weight?: string | null;
        canvas_signed_data?: unknown | null;
        canvas_msg_id?: string | null;
        created_at?: GetThreadsResponseThreadsItemReactionCreatedAt.Raw | null;
        updated_at?: GetThreadsResponseThreadsItemReactionUpdatedAt.Raw | null;
        Address?: GetThreadsResponseThreadsItemReactionAddress.Raw | null;
        address?: string | null;
        last_active?: GetThreadsResponseThreadsItemReactionLastActive.Raw | null;
        profile_name?: string | null;
        avatar_url?: string | null;
    }
}
