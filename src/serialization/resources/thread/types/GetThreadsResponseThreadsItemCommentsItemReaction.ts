/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as CommonApi from "../../../../api/index";
import * as core from "../../../../core";
import { GetThreadsResponseThreadsItemCommentsItemReactionCreatedAt } from "./GetThreadsResponseThreadsItemCommentsItemReactionCreatedAt";
import { GetThreadsResponseThreadsItemCommentsItemReactionUpdatedAt } from "./GetThreadsResponseThreadsItemCommentsItemReactionUpdatedAt";
import { GetThreadsResponseThreadsItemCommentsItemReactionAddress } from "./GetThreadsResponseThreadsItemCommentsItemReactionAddress";
import { GetThreadsResponseThreadsItemCommentsItemReactionLastActive } from "./GetThreadsResponseThreadsItemCommentsItemReactionLastActive";

export const GetThreadsResponseThreadsItemCommentsItemReaction: core.serialization.ObjectSchema<
    serializers.GetThreadsResponseThreadsItemCommentsItemReaction.Raw,
    CommonApi.GetThreadsResponseThreadsItemCommentsItemReaction
> = core.serialization.object({
    id: core.serialization.number(),
    addressId: core.serialization.property("address_id", core.serialization.number()),
    reaction: core.serialization.stringLiteral("like"),
    threadId: core.serialization.property("thread_id", core.serialization.number().optional()),
    commentId: core.serialization.property("comment_id", core.serialization.number().optional()),
    proposalId: core.serialization.property("proposal_id", core.serialization.number().optional()),
    calculatedVotingWeight: core.serialization.property(
        "calculated_voting_weight",
        core.serialization.string().optional()
    ),
    canvasSignedData: core.serialization.property("canvas_signed_data", core.serialization.unknown().optional()),
    canvasMsgId: core.serialization.property("canvas_msg_id", core.serialization.string().optional()),
    createdAt: core.serialization.property(
        "created_at",
        GetThreadsResponseThreadsItemCommentsItemReactionCreatedAt.optional()
    ),
    updatedAt: core.serialization.property(
        "updated_at",
        GetThreadsResponseThreadsItemCommentsItemReactionUpdatedAt.optional()
    ),
    address: core.serialization.property(
        "Address",
        GetThreadsResponseThreadsItemCommentsItemReactionAddress.optional()
    ),
    address: core.serialization.string().optional(),
    lastActive: core.serialization.property(
        "last_active",
        GetThreadsResponseThreadsItemCommentsItemReactionLastActive.optional()
    ),
    profileName: core.serialization.property("profile_name", core.serialization.string().optional()),
    avatarUrl: core.serialization.property("avatar_url", core.serialization.string().optional()),
});

export declare namespace GetThreadsResponseThreadsItemCommentsItemReaction {
    interface Raw {
        id: number;
        address_id: number;
        reaction: "like";
        thread_id?: number | null;
        comment_id?: number | null;
        proposal_id?: number | null;
        calculated_voting_weight?: string | null;
        canvas_signed_data?: unknown | null;
        canvas_msg_id?: string | null;
        created_at?: GetThreadsResponseThreadsItemCommentsItemReactionCreatedAt.Raw | null;
        updated_at?: GetThreadsResponseThreadsItemCommentsItemReactionUpdatedAt.Raw | null;
        Address?: GetThreadsResponseThreadsItemCommentsItemReactionAddress.Raw | null;
        address?: string | null;
        last_active?: GetThreadsResponseThreadsItemCommentsItemReactionLastActive.Raw | null;
        profile_name?: string | null;
        avatar_url?: string | null;
    }
}
