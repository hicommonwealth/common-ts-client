/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as CommonApi from "../../../../api/index";
import * as core from "../../../../core";
import { GetThreadsResponseThreadsItemReactionAddressVerificationTokenExpires } from "./GetThreadsResponseThreadsItemReactionAddressVerificationTokenExpires";
import { GetThreadsResponseThreadsItemReactionAddressVerified } from "./GetThreadsResponseThreadsItemReactionAddressVerified";
import { GetThreadsResponseThreadsItemReactionAddressLastActive } from "./GetThreadsResponseThreadsItemReactionAddressLastActive";
import { GetThreadsResponseThreadsItemReactionAddressWalletId } from "./GetThreadsResponseThreadsItemReactionAddressWalletId";
import { GetThreadsResponseThreadsItemReactionAddressRole } from "./GetThreadsResponseThreadsItemReactionAddressRole";
import { GetThreadsResponseThreadsItemReactionAddressUser } from "./GetThreadsResponseThreadsItemReactionAddressUser";
import { GetThreadsResponseThreadsItemReactionAddressCreatedAt } from "./GetThreadsResponseThreadsItemReactionAddressCreatedAt";
import { GetThreadsResponseThreadsItemReactionAddressUpdatedAt } from "./GetThreadsResponseThreadsItemReactionAddressUpdatedAt";

export const GetThreadsResponseThreadsItemReactionAddress: core.serialization.ObjectSchema<
    serializers.GetThreadsResponseThreadsItemReactionAddress.Raw,
    CommonApi.GetThreadsResponseThreadsItemReactionAddress
> = core.serialization.object({
    id: core.serialization.number(),
    address: core.serialization.string(),
    communityId: core.serialization.property("community_id", core.serialization.string()),
    userId: core.serialization.property("user_id", core.serialization.number().optional()),
    verificationToken: core.serialization.property("verification_token", core.serialization.string().optional()),
    verificationTokenExpires: core.serialization.property(
        "verification_token_expires",
        GetThreadsResponseThreadsItemReactionAddressVerificationTokenExpires.optional()
    ),
    verified: GetThreadsResponseThreadsItemReactionAddressVerified.optional(),
    lastActive: core.serialization.property(
        "last_active",
        GetThreadsResponseThreadsItemReactionAddressLastActive.optional()
    ),
    ghostAddress: core.serialization.property("ghost_address", core.serialization.boolean().optional()),
    walletId: core.serialization.property("wallet_id", GetThreadsResponseThreadsItemReactionAddressWalletId.optional()),
    blockInfo: core.serialization.property("block_info", core.serialization.string().optional()),
    isUserDefault: core.serialization.property("is_user_default", core.serialization.boolean().optional()),
    role: GetThreadsResponseThreadsItemReactionAddressRole.optional(),
    isBanned: core.serialization.property("is_banned", core.serialization.boolean().optional()),
    hex: core.serialization.string().optional(),
    user: core.serialization.property("User", GetThreadsResponseThreadsItemReactionAddressUser.optional()),
    createdAt: core.serialization.property(
        "created_at",
        GetThreadsResponseThreadsItemReactionAddressCreatedAt.optional()
    ),
    updatedAt: core.serialization.property(
        "updated_at",
        GetThreadsResponseThreadsItemReactionAddressUpdatedAt.optional()
    ),
});

export declare namespace GetThreadsResponseThreadsItemReactionAddress {
    interface Raw {
        id: number;
        address: string;
        community_id: string;
        user_id?: number | null;
        verification_token?: string | null;
        verification_token_expires?: GetThreadsResponseThreadsItemReactionAddressVerificationTokenExpires.Raw | null;
        verified?: GetThreadsResponseThreadsItemReactionAddressVerified.Raw | null;
        last_active?: GetThreadsResponseThreadsItemReactionAddressLastActive.Raw | null;
        ghost_address?: boolean | null;
        wallet_id?: GetThreadsResponseThreadsItemReactionAddressWalletId.Raw | null;
        block_info?: string | null;
        is_user_default?: boolean | null;
        role?: GetThreadsResponseThreadsItemReactionAddressRole.Raw | null;
        is_banned?: boolean | null;
        hex?: string | null;
        User?: GetThreadsResponseThreadsItemReactionAddressUser.Raw | null;
        created_at?: GetThreadsResponseThreadsItemReactionAddressCreatedAt.Raw | null;
        updated_at?: GetThreadsResponseThreadsItemReactionAddressUpdatedAt.Raw | null;
    }
}
