/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as CommonApi from "../../../../api/index";
import * as core from "../../../../core";
import { GetThreadsResponseThreadsItemContestActionsItemContestContestManager } from "./GetThreadsResponseThreadsItemContestActionsItemContestContestManager";
import { GetThreadsResponseThreadsItemContestActionsItemContestStartTime } from "./GetThreadsResponseThreadsItemContestActionsItemContestStartTime";
import { GetThreadsResponseThreadsItemContestActionsItemContestEndTime } from "./GetThreadsResponseThreadsItemContestActionsItemContestEndTime";
import { GetThreadsResponseThreadsItemContestActionsItemContestScoreItem } from "./GetThreadsResponseThreadsItemContestActionsItemContestScoreItem";

export const GetThreadsResponseThreadsItemContestActionsItemContest: core.serialization.ObjectSchema<
    serializers.GetThreadsResponseThreadsItemContestActionsItemContest.Raw,
    CommonApi.GetThreadsResponseThreadsItemContestActionsItemContest
> = core.serialization.object({
    contestManager: core.serialization.property(
        "ContestManager",
        GetThreadsResponseThreadsItemContestActionsItemContestContestManager
    ),
    contestId: core.serialization.property("contest_id", core.serialization.number()),
    contestAddress: core.serialization.property("contest_address", core.serialization.string()),
    startTime: core.serialization.property(
        "start_time",
        GetThreadsResponseThreadsItemContestActionsItemContestStartTime
    ),
    endTime: core.serialization.property("end_time", GetThreadsResponseThreadsItemContestActionsItemContestEndTime),
    score: core.serialization.list(GetThreadsResponseThreadsItemContestActionsItemContestScoreItem),
    contestName: core.serialization.property("contest_name", core.serialization.string().optional()),
    contestInterval: core.serialization.property("contest_interval", core.serialization.number().optional()),
    contentId: core.serialization.property("content_id", core.serialization.number().optional()),
    contestCancelled: core.serialization.property("contest_cancelled", core.serialization.boolean().optional()),
    threadId: core.serialization.property("thread_id", core.serialization.number().optional()),
});

export declare namespace GetThreadsResponseThreadsItemContestActionsItemContest {
    interface Raw {
        ContestManager: GetThreadsResponseThreadsItemContestActionsItemContestContestManager.Raw;
        contest_id: number;
        contest_address: string;
        start_time: GetThreadsResponseThreadsItemContestActionsItemContestStartTime.Raw;
        end_time: GetThreadsResponseThreadsItemContestActionsItemContestEndTime.Raw;
        score: GetThreadsResponseThreadsItemContestActionsItemContestScoreItem.Raw[];
        contest_name?: string | null;
        contest_interval?: number | null;
        content_id?: number | null;
        contest_cancelled?: boolean | null;
        thread_id?: number | null;
    }
}
