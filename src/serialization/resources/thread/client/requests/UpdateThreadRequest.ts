/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as CommonApi from "../../../../../api/index";
import * as core from "../../../../../core";
import { UpdateThreadRequestCollaborators } from "../../types/UpdateThreadRequestCollaborators";

export const UpdateThreadRequest: core.serialization.Schema<
    serializers.UpdateThreadRequest.Raw,
    CommonApi.UpdateThreadRequest
> = core.serialization.object({
    threadId: core.serialization.property("thread_id", core.serialization.number()),
    body: core.serialization.string().optional(),
    title: core.serialization.string().optional(),
    topicId: core.serialization.property("topic_id", core.serialization.number().optional()),
    stage: core.serialization.string().optional(),
    url: core.serialization.string().optional(),
    locked: core.serialization.boolean().optional(),
    pinned: core.serialization.boolean().optional(),
    archived: core.serialization.boolean().optional(),
    spam: core.serialization.boolean().optional(),
    collaborators: UpdateThreadRequestCollaborators.optional(),
    canvasSignedData: core.serialization.property("canvas_signed_data", core.serialization.string().optional()),
    canvasMsgId: core.serialization.property("canvas_msg_id", core.serialization.string().optional()),
});

export declare namespace UpdateThreadRequest {
    interface Raw {
        thread_id: number;
        body?: string | null;
        title?: string | null;
        topic_id?: number | null;
        stage?: string | null;
        url?: string | null;
        locked?: boolean | null;
        pinned?: boolean | null;
        archived?: boolean | null;
        spam?: boolean | null;
        collaborators?: UpdateThreadRequestCollaborators.Raw | null;
        canvas_signed_data?: string | null;
        canvas_msg_id?: string | null;
    }
}
