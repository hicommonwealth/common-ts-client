/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as CommonApi from "../../../../api/index";
import * as core from "../../../../core";
import { CreateGroupResponseGroupsItemRequirementsItemThreshold } from "./CreateGroupResponseGroupsItemRequirementsItemThreshold";
import { CreateGroupResponseGroupsItemRequirementsItemAllow } from "./CreateGroupResponseGroupsItemRequirementsItemAllow";

export const CreateGroupResponseGroupsItemRequirementsItem: core.serialization.Schema<
    serializers.CreateGroupResponseGroupsItemRequirementsItem.Raw,
    CommonApi.CreateGroupResponseGroupsItemRequirementsItem
> = core.serialization
    .union("rule", {
        threshold: CreateGroupResponseGroupsItemRequirementsItemThreshold,
        allow: CreateGroupResponseGroupsItemRequirementsItemAllow,
    })
    .transform<CommonApi.CreateGroupResponseGroupsItemRequirementsItem>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace CreateGroupResponseGroupsItemRequirementsItem {
    type Raw =
        | CreateGroupResponseGroupsItemRequirementsItem.Threshold
        | CreateGroupResponseGroupsItemRequirementsItem.Allow;

    interface Threshold extends CreateGroupResponseGroupsItemRequirementsItemThreshold.Raw {
        rule: "threshold";
    }

    interface Allow extends CreateGroupResponseGroupsItemRequirementsItemAllow.Raw {
        rule: "allow";
    }
}
