/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as CommonApi from "../../../../api/index";
import * as core from "../../../../core";
import { UpdateCommunityResponseGroupsItemRequirementsItemThreshold } from "./UpdateCommunityResponseGroupsItemRequirementsItemThreshold";
import { UpdateCommunityResponseGroupsItemRequirementsItemAllow } from "./UpdateCommunityResponseGroupsItemRequirementsItemAllow";

export const UpdateCommunityResponseGroupsItemRequirementsItem: core.serialization.Schema<
    serializers.UpdateCommunityResponseGroupsItemRequirementsItem.Raw,
    CommonApi.UpdateCommunityResponseGroupsItemRequirementsItem
> = core.serialization
    .union("rule", {
        threshold: UpdateCommunityResponseGroupsItemRequirementsItemThreshold,
        allow: UpdateCommunityResponseGroupsItemRequirementsItemAllow,
    })
    .transform<CommonApi.UpdateCommunityResponseGroupsItemRequirementsItem>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace UpdateCommunityResponseGroupsItemRequirementsItem {
    type Raw =
        | UpdateCommunityResponseGroupsItemRequirementsItem.Threshold
        | UpdateCommunityResponseGroupsItemRequirementsItem.Allow;

    interface Threshold extends UpdateCommunityResponseGroupsItemRequirementsItemThreshold.Raw {
        rule: "threshold";
    }

    interface Allow extends UpdateCommunityResponseGroupsItemRequirementsItemAllow.Raw {
        rule: "allow";
    }
}
