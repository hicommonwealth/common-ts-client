/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as CommonApi from "../../../../api/index";
import * as core from "../../../../core";
import { CreateGroupResponseGroupsItemMetadata } from "./CreateGroupResponseGroupsItemMetadata";
import { CreateGroupResponseGroupsItemRequirementsItem } from "./CreateGroupResponseGroupsItemRequirementsItem";

export const CreateGroupResponseGroupsItem: core.serialization.ObjectSchema<
    serializers.CreateGroupResponseGroupsItem.Raw,
    CommonApi.CreateGroupResponseGroupsItem
> = core.serialization.object({
    id: core.serialization.number().optional(),
    communityId: core.serialization.property("community_id", core.serialization.string()),
    metadata: CreateGroupResponseGroupsItemMetadata,
    requirements: core.serialization.list(CreateGroupResponseGroupsItemRequirementsItem),
    isSystemManaged: core.serialization.property("is_system_managed", core.serialization.boolean().optional()),
    createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
    updatedAt: core.serialization.property("updated_at", core.serialization.date().optional()),
});

export declare namespace CreateGroupResponseGroupsItem {
    interface Raw {
        id?: number | null;
        community_id: string;
        metadata: CreateGroupResponseGroupsItemMetadata.Raw;
        requirements: CreateGroupResponseGroupsItemRequirementsItem.Raw[];
        is_system_managed?: boolean | null;
        created_at?: string | null;
        updated_at?: string | null;
    }
}
