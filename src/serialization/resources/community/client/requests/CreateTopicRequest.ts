/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as CommonApi from "../../../../../api/index";
import * as core from "../../../../../core";
import { CreateTopicRequestWeightedVoting } from "../../types/CreateTopicRequestWeightedVoting";

export const CreateTopicRequest: core.serialization.Schema<
    serializers.CreateTopicRequest.Raw,
    CommonApi.CreateTopicRequest
> = core.serialization.object({
    communityId: core.serialization.property("community_id", core.serialization.string()),
    name: core.serialization.string().optional(),
    description: core.serialization.string().optional(),
    featuredInSidebar: core.serialization.property("featured_in_sidebar", core.serialization.boolean().optional()),
    featuredInNewPost: core.serialization.property("featured_in_new_post", core.serialization.boolean().optional()),
    defaultOffchainTemplate: core.serialization.property(
        "default_offchain_template",
        core.serialization.string().optional()
    ),
    weightedVoting: core.serialization.property("weighted_voting", CreateTopicRequestWeightedVoting.optional()),
    tokenAddress: core.serialization.property("token_address", core.serialization.string().optional()),
    tokenSymbol: core.serialization.property("token_symbol", core.serialization.string().optional()),
    voteWeightMultiplier: core.serialization.property("vote_weight_multiplier", core.serialization.number().optional()),
});

export declare namespace CreateTopicRequest {
    interface Raw {
        community_id: string;
        name?: string | null;
        description?: string | null;
        featured_in_sidebar?: boolean | null;
        featured_in_new_post?: boolean | null;
        default_offchain_template?: string | null;
        weighted_voting?: CreateTopicRequestWeightedVoting.Raw | null;
        token_address?: string | null;
        token_symbol?: string | null;
        vote_weight_multiplier?: number | null;
    }
}
