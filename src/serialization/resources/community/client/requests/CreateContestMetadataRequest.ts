/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as CommonApi from "../../../../../api/index";
import * as core from "../../../../../core";

export const CreateContestMetadataRequest: core.serialization.Schema<
    serializers.CreateContestMetadataRequest.Raw,
    CommonApi.CreateContestMetadataRequest
> = core.serialization.object({
    communityId: core.serialization.property("community_id", core.serialization.string()),
    contestAddress: core.serialization.property("contest_address", core.serialization.string()),
    name: core.serialization.string(),
    imageUrl: core.serialization.property("image_url", core.serialization.string().optional()),
    fundingTokenAddress: core.serialization.property("funding_token_address", core.serialization.string().optional()),
    prizePercentage: core.serialization.property("prize_percentage", core.serialization.number().optional()),
    payoutStructure: core.serialization.property(
        "payout_structure",
        core.serialization.list(core.serialization.number())
    ),
    interval: core.serialization.number(),
    ticker: core.serialization.string().optional(),
    decimals: core.serialization.number().optional(),
    topicId: core.serialization.property("topic_id", core.serialization.number().optional()),
    isFarcasterContest: core.serialization.property("is_farcaster_contest", core.serialization.boolean().optional()),
});

export declare namespace CreateContestMetadataRequest {
    interface Raw {
        community_id: string;
        contest_address: string;
        name: string;
        image_url?: string | null;
        funding_token_address?: string | null;
        prize_percentage?: number | null;
        payout_structure: number[];
        interval: number;
        ticker?: string | null;
        decimals?: number | null;
        topic_id?: number | null;
        is_farcaster_contest?: boolean | null;
    }
}
