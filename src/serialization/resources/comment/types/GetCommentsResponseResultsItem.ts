/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as CommonApi from "../../../../api/index";
import * as core from "../../../../core";
import { GetCommentsResponseResultsItemDiscordMeta } from "./GetCommentsResponseResultsItemDiscordMeta";
import { GetCommentsResponseResultsItemSearch } from "./GetCommentsResponseResultsItemSearch";
import { GetCommentsResponseResultsItemAddress } from "./GetCommentsResponseResultsItemAddress";
import { GetCommentsResponseResultsItemThread } from "./GetCommentsResponseResultsItemThread";
import { GetCommentsResponseResultsItemReaction } from "./GetCommentsResponseResultsItemReaction";
import { GetCommentsResponseResultsItemCommentVersionHistoriesItem } from "./GetCommentsResponseResultsItemCommentVersionHistoriesItem";

export const GetCommentsResponseResultsItem: core.serialization.ObjectSchema<
    serializers.GetCommentsResponseResultsItem.Raw,
    CommonApi.GetCommentsResponseResultsItem
> = core.serialization.object({
    id: core.serialization.number().optional(),
    threadId: core.serialization.property("thread_id", core.serialization.number()),
    addressId: core.serialization.property("address_id", core.serialization.number()),
    body: core.serialization.string(),
    parentId: core.serialization.property("parent_id", core.serialization.string().optional()),
    contentUrl: core.serialization.property("content_url", core.serialization.string().optional()),
    canvasSignedData: core.serialization.property("canvas_signed_data", core.serialization.string().optional()),
    canvasMsgId: core.serialization.property("canvas_msg_id", core.serialization.string().optional()),
    createdBy: core.serialization.property("created_by", core.serialization.string().optional()),
    createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
    updatedAt: core.serialization.property("updated_at", core.serialization.date().optional()),
    deletedAt: core.serialization.property("deleted_at", core.serialization.date().optional()),
    markedAsSpamAt: core.serialization.property("marked_as_spam_at", core.serialization.date().optional()),
    discordMeta: core.serialization.property("discord_meta", GetCommentsResponseResultsItemDiscordMeta.optional()),
    reactionCount: core.serialization.property("reaction_count", core.serialization.number()),
    reactionWeightsSum: core.serialization.property("reaction_weights_sum", core.serialization.string().optional()),
    search: GetCommentsResponseResultsItemSearch,
    address: core.serialization.property("Address", GetCommentsResponseResultsItemAddress.optional()),
    thread: core.serialization.property("Thread", GetCommentsResponseResultsItemThread.optional()),
    reaction: core.serialization.property("Reaction", GetCommentsResponseResultsItemReaction.optional()),
    commentVersionHistories: core.serialization.property(
        "CommentVersionHistories",
        core.serialization.list(GetCommentsResponseResultsItemCommentVersionHistoriesItem).optional()
    ),
    lastEdited: core.serialization.property("last_edited", core.serialization.date().optional()),
});

export declare namespace GetCommentsResponseResultsItem {
    interface Raw {
        id?: number | null;
        thread_id: number;
        address_id: number;
        body: string;
        parent_id?: string | null;
        content_url?: string | null;
        canvas_signed_data?: string | null;
        canvas_msg_id?: string | null;
        created_by?: string | null;
        created_at?: string | null;
        updated_at?: string | null;
        deleted_at?: string | null;
        marked_as_spam_at?: string | null;
        discord_meta?: GetCommentsResponseResultsItemDiscordMeta.Raw | null;
        reaction_count: number;
        reaction_weights_sum?: string | null;
        search: GetCommentsResponseResultsItemSearch.Raw;
        Address?: GetCommentsResponseResultsItemAddress.Raw | null;
        Thread?: GetCommentsResponseResultsItemThread.Raw | null;
        Reaction?: GetCommentsResponseResultsItemReaction.Raw | null;
        CommentVersionHistories?: GetCommentsResponseResultsItemCommentVersionHistoriesItem.Raw[] | null;
        last_edited?: string | null;
    }
}
